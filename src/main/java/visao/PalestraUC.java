/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package main.java.visao;

import java.time.LocalDate;
import java.time.LocalTime;
import javax.swing.JOptionPane;
import main.java.controle.PalestraControle;
import main.java.controle.PalestranteControle;
import main.java.exceptions.PalestraConcomitanteException;
import main.java.objetos.Palestra;
import main.java.objetos.Palestrante;
/**
 *
 * @author arthu
 */
public class PalestraUC extends javax.swing.JFrame {
    PalestranteControle pc = PalestranteControle.getPalestranteControle();
    int flag; //0 para atualizacao, 1 para cadastro
    Palestra palestrinha = null;
    
    public PalestraUC() {
        initComponents();
        Palestrante pll = new Palestrante();
        
        cmbPal.removeAllItems();
        
        for(Palestrante p : pc.getPalestrantes())
            cmbPal.addItem(p.getNome());
    }
    
    public PalestraUC(int flag) {
        initComponents();
        
        cmbPal.removeAllItems();
        
        for(Palestrante p : pc.getPalestrantes())
            cmbPal.addItem(p.getNome());
        
        this.flag = flag;
    }
    
    public PalestraUC(Palestra palestrinha, int flag) {
        initComponents();
       
        cmbPal.removeAllItems();
        
        for(Palestrante p : pc.getPalestrantes())
            cmbPal.addItem(p.getNome());
        
        cxTitulo.setText(palestrinha.getTitulo());
        cxDia.setText(Integer.toString(palestrinha.getData().getDayOfMonth()));
        cxMes.setText(Integer.toString(palestrinha.getData().getMonthValue()));
        cxAno.setText(Integer.toString(palestrinha.getData().getYear()));
        cxHora.setText(Integer.toString(palestrinha.getHora().getHour()));
        cxMin.setText(Integer.toString(palestrinha.getHora().getMinute()));
        cxVaga.setText(Integer.toString(palestrinha.getVagas()));
        cxLocal.setText(palestrinha.getLocal());
        cmbPal.setSelectedItem(palestrinha.getPalestrantes().getNome());
        
        this.flag = flag;
        this.palestrinha = palestrinha;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rtTitulo = new javax.swing.JLabel();
        cxTitulo = new javax.swing.JTextField();
        rtData = new javax.swing.JLabel();
        cxDia = new javax.swing.JTextField();
        rtSep1 = new javax.swing.JLabel();
        cxMes = new javax.swing.JTextField();
        rtSep2 = new javax.swing.JLabel();
        cxAno = new javax.swing.JTextField();
        rtHora = new javax.swing.JLabel();
        rtVaga = new javax.swing.JLabel();
        cxVaga = new javax.swing.JTextField();
        cxHora = new javax.swing.JTextField();
        rtSepHora = new javax.swing.JLabel();
        cxMin = new javax.swing.JTextField();
        rtLocal = new javax.swing.JLabel();
        cxLocal = new javax.swing.JTextField();
        btOk5 = new javax.swing.JButton();
        rtPalestrante = new javax.swing.JLabel();
        cmbPal = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        rtTitulo.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        rtTitulo.setText("Titulo: ");

        rtData.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        rtData.setText("Data (dd/mm/aaaa): ");

        rtSep1.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        rtSep1.setText("/");

        rtSep2.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        rtSep2.setText("/");

        rtHora.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        rtHora.setText("Hora: ");

        rtVaga.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        rtVaga.setText("Vagas: ");

        rtSepHora.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        rtSepHora.setText("h");

        rtLocal.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        rtLocal.setText("Local: ");

        btOk5.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        btOk5.setText("OK");
        btOk5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btOk5ActionPerformed(evt);
            }
        });

        rtPalestrante.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        rtPalestrante.setText("Palestrante: ");

        cmbPal.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(rtPalestrante)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbPal, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btOk5))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(rtLocal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(rtVaga, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(rtHora, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cxHora, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                                    .addComponent(cxVaga))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rtSepHora)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cxMin, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cxLocal)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cxTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rtData)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cxDia, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rtSep1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cxMes, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rtSep2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cxAno, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(35, 35, 35))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rtTitulo)
                    .addComponent(cxTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rtData)
                    .addComponent(cxDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rtSep1)
                    .addComponent(cxMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rtSep2)
                    .addComponent(cxAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rtHora)
                        .addComponent(cxHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rtSepHora)
                        .addComponent(cxMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rtVaga)
                    .addComponent(cxVaga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rtLocal)
                    .addComponent(cxLocal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btOk5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rtPalestrante)
                        .addComponent(cmbPal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btOk5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btOk5ActionPerformed
        botao();
        this.dispose();
    }//GEN-LAST:event_btOk5ActionPerformed
    
    private void botao(){
        if(flag == 0) atualizar();
        else cadastrar();
    }
    
    private void atualizar(){
        Palestra aux = new Palestra();

        aux.setTitulo(cxTitulo.getText());
        
        try{
            aux.setData(LocalDate.of(
                Integer.parseInt(cxAno.getText()),
                Integer.parseInt(cxMes.getText()),
                Integer.parseInt(cxDia.getText())
            ));

            aux.setHora(LocalTime.of(
                Integer.parseInt(cxHora.getText()),
                Integer.parseInt(cxMin.getText())
            ));

            aux.setVagas(Integer.parseInt(cxVaga.getText()));

            aux.setLocal(cxLocal.getText());

            Palestra teste = PalestraControle.atualizar(palestrinha.getCodigo(), aux);

            if(teste == null)
                JOptionPane.showMessageDialog(null, "Nao foi possivel atualizar",
                        "Erro de atualizacao", JOptionPane.ERROR_MESSAGE);
            else
                JOptionPane.showMessageDialog(null, "Atualizado com sucesso",
                        "Atualizacao", JOptionPane.INFORMATION_MESSAGE);
        } catch(NumberFormatException nfe){
            JOptionPane.showMessageDialog(null, "Paramentro invalido",
                    "Erro de atualizacao", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void cadastrar(){
        Palestra aux = new Palestra();
        Palestrante pp = null;
        
        aux.setTitulo(cxTitulo.getText());
        try{
            aux.setData(LocalDate.of(
                Integer.parseInt(cxAno.getText()),
                Integer.parseInt(cxMes.getText()),
                Integer.parseInt(cxDia.getText())
            ));

            aux.setHora(LocalTime.of(
                Integer.parseInt(cxHora.getText()),
                Integer.parseInt(cxMin.getText())
            ));

            aux.setVagas(Integer.parseInt(cxVaga.getText()));
            
            for(Palestrante p1 : pc.getPalestrantes())
                if(p1.getNome().equals((String) cmbPal.getSelectedItem())) pp = p1;
            
            aux.setPalestrante(pp);
            aux.setLocal(cxLocal.getText());
            
            if(pp != null) aux.setPalestrante(pp);
            
            PalestraControle.cadastrar(aux);
        } catch(PalestraConcomitanteException pce){
            JOptionPane.showMessageDialog(null, 
                    "Nao pode haver duas palestras simultaneas no mesmo local",
                    "Erro de cadastro", JOptionPane.ERROR_MESSAGE);
        } catch(NumberFormatException nfe){
            JOptionPane.showMessageDialog(null, 
                    "Parametros invalidos",
                    "Erro de cadastro", JOptionPane.ERROR_MESSAGE);
        }
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PalestraUC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PalestraUC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PalestraUC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PalestraUC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PalestraUC().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btOk5;
    private javax.swing.JComboBox<String> cmbPal;
    private javax.swing.JTextField cxAno;
    private javax.swing.JTextField cxDia;
    private javax.swing.JTextField cxHora;
    private javax.swing.JTextField cxLocal;
    private javax.swing.JTextField cxMes;
    private javax.swing.JTextField cxMin;
    private javax.swing.JTextField cxTitulo;
    private javax.swing.JTextField cxVaga;
    private javax.swing.JLabel rtData;
    private javax.swing.JLabel rtHora;
    private javax.swing.JLabel rtLocal;
    private javax.swing.JLabel rtPalestrante;
    private javax.swing.JLabel rtSep1;
    private javax.swing.JLabel rtSep2;
    private javax.swing.JLabel rtSepHora;
    private javax.swing.JLabel rtTitulo;
    private javax.swing.JLabel rtVaga;
    // End of variables declaration//GEN-END:variables
}
